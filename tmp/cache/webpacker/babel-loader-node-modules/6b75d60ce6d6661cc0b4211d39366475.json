{"ast":null,"code":"import { router } from \"../BackboneRouter/application_router\";\nimport { User } from \"../BackboneModel/user_model\";\nimport { Guild, guildCollection, GuildCollection } from \"../BackboneModel/guild_model\";\nimport { War } from \"../BackboneModel/war_model\";\nimport { userCollection } from \"../BackboneModel/user_model\";\nimport { Battle, Battles } from \"../BackboneModel/battle_list_model\";\nimport { GuildListView } from \"../BackboneViews/GuildListView\";\nvar Guild_matching_popup = Backbone.View.extend({\n  render: function render(self) {\n    $(\".PopUp-guild-matching\").remove();\n\n    if (true) {\n      var traitement = function traitement(chrono) {\n        setTimeout(suiteTraitement, 1000, chrono);\n      };\n\n      var suiteTraitement = function suiteTraitement(chrono) {\n        if (self.stop_matchine == true) {// nothing\n        } else if (chrono > 0) {\n          traitement(chrono - 1);\n          $('#chrono').html(chrono);\n        } else {\n          removePopup();\n        }\n      };\n\n      var chrono = 15;\n      self.stop_matchine = false;\n      $(\".Center\").append('<div class=\"PopUp PopUp-guild-matching\" id=\"popup-profil\">\\\n                <input type=\"button\" class=\"popup-social-hover\" id=\"popup-chatroom-administration-quit\" value=\"✖\"></input>' + '<input type=\"button\" class=\"popup-social-hover\" id=\"popup-chatroom-administration-refresh\" value=\"⟳\"></input>\\\n                <h2 id=\"title-popup-chatroom-pannel\">' + 'search match' + '</h2>\\\n                <p id=\"chrono\"><p>\\\n                <img id=\"img-chargement-gif\" src=\"https://thumbs.gfycat.com/KnobbyWeirdIlladopsis-size_restricted.gif\"><image>\\\n                </div>');\n\n      var removePopup = function removePopup() {\n        self.stop_matchine = true;\n        var battle = new Battle({\n          id: 'tournament'\n        });\n        battle.destroy({\n          data: {\n            type_battle: 'tournament'\n          },\n          processData: true\n        }).then(function () {\n          $(\".PopUp\").remove();\n        });\n        $(\"#popUpWar\").remove();\n        $(\".BackClick\").remove();\n        $(\".PopUp\").remove();\n        self.mouseIn = true;\n      };\n\n      traitement(chrono);\n      self.mouseIn = false;\n      $(\".PopUp\").hover(function () {\n        self.mouseIn = true;\n      }, function () {\n        self.mouseIn = false;\n      });\n      $(\"body\").mouseup(function () {\n        if (self.mouseIn == false) removePopup();\n      });\n      $(\"#popup-chatroom-administration-quit\").click(function () {\n        removePopup();\n      });\n    }\n\n    ;\n  }\n});\nvar matching_popup = new Guild_matching_popup();\nvar GuildContent = Backbone.View.extend({\n  initialize: function initialize() {\n    this.guildListView = new GuildListView();\n  },\n  events: {\n    \"click #joinGuild\": \"join\",\n    \"click #createGuild\": \"create\",\n    \"click #leaveGuild\": \"leave\",\n    \"click #no\": \"removeConfirmDiv\",\n    \"click #yes\": \"exitGuild\",\n    \"click #manageGuild\": \"manageGuild\",\n    \"click #destroyGuild\": \"destroyGuildConfirm\",\n    \"click #destroyGuildButton\": \"destroyGuild\",\n    \"click #exitDestroy\": \"exitDestroy\",\n    \"click #warMenu\": \"displayWarMenu\",\n    \"click #quitPopUp\": \"removeWarMenu\",\n    \"click #giveUpWar\": \"surrender\",\n    \"click #settingGuildButton\": \"settings\"\n  },\n  render: function render() {\n    var _this = this;\n\n    var self = this;\n    self.matchingPopupIsOpen = false;\n    var user = new User({\n      id: Cookies.get(\"login\")\n    });\n    user.fetch().then(function (res) {\n      if (res[\"guild_id\"] == null) {\n        _this.$el.html(\"\\n                <div id=\\\"flex_div\\\">\\n                    <button id=\\\"joinGuild\\\"> Join a Guild </button>\\n                    <button id=\\\"createGuild\\\"> Create a Guild </button>\\n                </div>\\n                \");\n\n        self.guildListView.render();\n      } else {\n        var guild = new Guild({\n          id: res[\"guild_id\"]\n        });\n        var user = res;\n        guild.fetch().then(function (res) {\n          var src;\n          if (res.flag.length > 0) src = res.flag;else src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Pirate_Flag_of_Jack_Rackham.svg/1024px-Pirate_Flag_of_Jack_Rackham.svg.png\";\n\n          _this.$el.html(\"\\n                        <div id=\\\"flex_div\\\">\\n                        <img src=\\\"\".concat(src, \"\\\"> </img>\\n                        <h1> \").concat(res[\"name\"], \" </h1>\\n                        <h1> \").concat(res[\"anagram\"], \" </h1>\\n                        <h1> Points: \").concat(res[\"points\"], \" </h1> \\n                        </div>\"));\n\n          if (user[\"guildStatus\"] == \"owner\") {\n            $(\"#flex_div\").append(\"<button id=\\\"manageGuild\\\"> manage the guild </button>\");\n            $(\"#flex_div\").append(\"<button id=\\\"destroyGuild\\\"> destroy the guild </button>\");\n          } else {\n            $(\"#flex_div\").append(\"<button id=\\\"leaveGuild\\\"> leave the guild </button>\");\n          }\n\n          self.guildListView.render();\n        });\n      }\n    }).then(function () {\n      var guild = new Guild({\n        id: Cookies.get(\"guildId\")\n      });\n      guild.fetch().then(function (res) {\n        if (res[\"error\"]) {\n          return;\n        }\n\n        var my_guild = res;\n        axios.get(\"/api/wars/\".concat(res[\"name\"])).then(function (res) {\n          if (res.data) {\n            _this.data = res.data;\n            axios.get(\"/api/users/\".concat(Cookies.get(\"login\"))).then(function (res) {\n              if (res.data[\"guild_id\"] != null) {\n                $(\"#flex_div\").append(\"<button id=\\\"warMenu\\\"> War menu </button>\");\n              }\n            });\n          }\n\n          ;\n        });\n      });\n    });\n  },\n  join: function join() {\n    router.navigate(\"connected/guild/join\", {\n      trigger: true\n    });\n  },\n  create: function create() {\n    router.navigate(\"connected/guild/create\", {\n      trigger: true\n    });\n  },\n  leave: function leave() {\n    $(\".Center\").append(\"<div id=\\\"confirmDiv\\\">\\n            <h2> Are you sure you want to leave the guild ? </h2>\\n            <div id=\\\"yesno\\\">\\n                <button id=\\\"yes\\\"> yes </button>\\n                <button id=\\\"no\\\"> no </button>\\n            </div>\\n        </div>\\n        \");\n  },\n  removeConfirmDiv: function removeConfirmDiv() {\n    $(\"#confirmDiv\").remove();\n  },\n  exitGuild: function exitGuild() {\n    var _this2 = this;\n\n    var user = new User({\n      id: Cookies.get(\"login\")\n    });\n    user.fetch();\n    user.save({\n      guild_id: null,\n      guildStatus: null\n    }).then(function () {\n      $(\"#confirmDiv\").remove();\n\n      _this2.render();\n    });\n  },\n  manageGuild: function manageGuild() {\n    router.navigate(\"connected/guild/manage\", {\n      trigger: true\n    });\n  },\n  destroyGuildConfirm: function destroyGuildConfirm() {\n    if ($(\"#popUpDestroy\").length == 0) {\n      $(\".Center\").append(\"<div id=\\\"popUpDestroy\\\" class=\\\"PopUp\\\">\\n                    <h1> Are you sure you want to destroy the guild ? </h1>\\n                    <div id=\\\"yesno\\\">\\n                        <button id=\\\"destroyGuildButton\\\"> destroy guild </button>\\n                        <button id=\\\"exitDestroy\\\"> exit </button>\\n                    </div>\\n                </div>\\n            \");\n    }\n  },\n  destroyGuild: function destroyGuild() {\n    var _this3 = this;\n\n    axios[\"delete\"](\"/api/guilds/\".concat(Cookies.get(\"guildId\"))).then(function (res) {\n      _this3.render();\n    });\n    $(\"#popUpDestroy\").remove();\n  },\n  exitDestroy: function exitDestroy() {\n    $(\"#popUpDestroy\").remove();\n  },\n  displayWarMenu: function displayWarMenu(e) {\n    var _this4 = this;\n\n    var self = this;\n    $(\"body\").append(\"<div class=\\\"BackClick\\\"></div>\");\n    $(\".BackClick\").click(function () {\n      _this4.removeWarMenu();\n    });\n    $(\".Center\").append(\"\\n            <div class=\\\"PopUp\\\" id=\\\"popUpWar\\\">\\n                <h1> \".concat(this.data[\"player1\"], \" <span style=\\\"color: red\\\" > VS </span> \").concat(this.data[\"player2\"], \" </h1>\\n                <h3> <span style=\\\"color: #d4af37; font-size: 1.5em\\\">PRIZE :  \").concat(this.data[\"prize\"], \" </span></h3>\\n                <p> \").concat(this.data[\"player1\"], \" points : \").concat(this.data[\"player1_points\"], \" </p>\\n                <p> \").concat(this.data[\"player2\"], \" points : \").concat(this.data[\"player2_points\"], \" </p>\\n                <h3> <span style=\\\"color: red; font-size: 1.5em\\\">MAX UNANSWERED MATCHS : \").concat(this.data[\"max_unanswered\"], \" </span></h3>\\n                <p> unanswered match \").concat(this.data[\"player1\"], \": \").concat(this.data[\"player1_unanswered\"], \" </p>\\n                <p> unanswered match \").concat(this.data[\"player2\"], \": \").concat(this.data[\"player2_unanswered\"], \" </p>\\n                <h3> <span style=\\\"color: green; font-size: 1.5em\\\"> FROM \").concat(new Date(this.data[\"start_at\"]).toDateString(), \" TO \").concat(new Date(this.data[\"end_at\"]).toDateString(), \" </span> </h3>\\n                <div id=\\\"warTimeList\\\">\\n                </div>\\n                <button id=\\\"giveUpWar\\\"> surrender </button> \\n                <button id=\\\"battleGuildWar\\\"> guild battle </button> \\n                <p class=\\\"QuitPopUp\\\" id=\\\"quitPopUp\\\">\\u274C</p>\\n            </div>\\n        \"));\n    $(\"#battleGuildWar\").click(function () {\n      var battle = new Battle({\n        type_battle: 'guild'\n      });\n      battle.save().then(function (res) {\n        if (res[\"possible\"] == true) {\n          self.removeWarMenu();\n          matching_popup.render(self);\n        } else {\n          alert(\"unable to start matchmaking:\\n- match in progress\\n- already pending\\n- you are not in a combat period\");\n        }\n      });\n    });\n    $.each(this.data[\"timetable\"], function (i) {\n      $(\"#warTimeList\").append(\"\\n                <p>\".concat(_this4.data[\"timetable\"][i], \"</p>\\n            \"));\n    }); //si ya match afficher score sinon bouton pour defier\n  },\n  removeWarMenu: function removeWarMenu() {\n    $(\"#popUpWar\").remove();\n    $(\".BackClick\").remove();\n  },\n  surrender: function surrender() {\n    var _this5 = this;\n\n    var war = new War({\n      id: this.data.id\n    });\n    war.fetch().then(function () {\n      war.destroy().then(function (res) {\n        $(\".BackClick\").remove();\n\n        _this5.render();\n      });\n    });\n  }\n});\nvar guildContent = new GuildContent({\n  el: \".Center\"\n});\nvar GuildCreateContent = Backbone.View.extend({\n  events: {\n    \"click #saveGuildButton\": \"saveGuild\"\n  },\n  render: function render() {\n    this.$el.html(\"\\n        <div id=\\\"flex_div\\\">\\n       <h2 id=\\\"settingsTitle\\\"> Create a Guild </h2>\\n        <div id=\\\"inputDiv\\\">\\n        <input id=\\\"guildName\\\" placeholder=\\\"name\\\"/>\\n        <input id=\\\"guildAnagram\\\" placeholder=\\\"anagram\\\"/>\\n        </div>\\n        <div class=\\\"CheckBox\\\">\\n        <p> select an flag image </p>\\n        <label id=\\\"fileLabel\\\" for=\\\"fileUpload\\\"> Select a file </label>\\n        <input id=\\\"fileUpload\\\" type=\\\"file\\\" accept=\\\"image/*\\\"/>\\n        </div>\\n        <button id=\\\"saveGuildButton\\\"> create </button>\\n        </div>\\n        \");\n    return this;\n  },\n  saveGuild: function saveGuild() {\n    if ($(\"#guildName\").val().length < 3) {\n      if ($(\"#errorCreate\").length == 0) $(\".Center\").append(\"<p id=\\\"errorCreate\\\"> The guild name must be at least 3 characters </p>\");\n      return;\n    } else $(\"#errorCreate\").remove();\n\n    if ($(\"#guildAnagram\").val().length > 5) {\n      if ($(\"#errorCreate\").length == 0) $(\".Center\").append(\"<p id=\\\"errorCreate\\\"> The guild anagram must be less than 6 characters </p>\");\n      return;\n    } else $(\"#errorCreate\").remove();\n\n    if ($(\"#guildAnagram\").val().length < 2) {\n      if ($(\"#errorCreate\").length == 0) $(\".Center\").append(\"<p id=\\\"errorCreate\\\"> The guild anagram must at least two character long </p>\");\n      return;\n    } else $(\"#errorCreate\").remove();\n\n    var user = new User({\n      id: Cookies.get(\"login\")\n    });\n    user.fetch().then(function (res) {\n      var formData = new FormData();\n\n      if (document.getElementById(\"fileUpload\").files.length > 0) {\n        var file = document.getElementById(\"fileUpload\").files[0];\n        var blob = new Blob([file]);\n        formData.append(\"flag\", blob);\n      }\n\n      formData.append(\"name\", $(\"#guildName\").val());\n      formData.append(\"points\", 0);\n      formData.append(\"anagram\", $(\"#guildAnagram\").val());\n      formData.append(\"user\", user[\"id\"]);\n\n      if (document.getElementById(\"fileUpload\").files.length > 0) {\n        var file = document.getElementById(\"fileUpload\").files[0];\n        var blob = new Blob([file]);\n        formData.append(\"flag\", blob);\n      }\n\n      axios({\n        url: \"/api/guilds\",\n        method: \"POST\",\n        data: formData\n      }).then(function (res) {\n        if (res.data.body == \"guild name already exist in the database\") {\n          if ($(\"#errorCreate\").length == 0) $(\".Center\").append(\"<p id=\\\"errorCreate\\\"> The guild name is already register </p>\");\n          return;\n        } else $(\"#errorCreate\").remove();\n\n        if (res.data.body == \"guild anagram already exist in the database\") {\n          if ($(\"#errorCreate\").length == 0) $(\".Center\").append(\"<p id=\\\"errorCreate\\\"> The guild anagram is already register </p>\");\n          return;\n        } else $(\"#errorCreate\").remove();\n\n        Cookies.set(\"guildId\", res.data[\"id\"]);\n        router.navigate(\"connected/guild\", {\n          trigger: true\n        });\n      });\n    });\n  }\n});\nvar guildCreateContent = new GuildCreateContent({\n  el: \".Center\"\n});\nvar GuildJoinContent = Backbone.View.extend({\n  events: {\n    \"click .guildBox\": \"joinGuild\",\n    \"keyup #guildSearch\": \"updateList\"\n  },\n  render: function render() {\n    this.$el.html(\"<h1> Join a guild </h1>\\n            <input placeholder=\\\"search a guild\\\" id=\\\"guildSearch\\\"/>\\n            <div id=\\\"guildList\\\">\\n            </div>\\n            \");\n    guildCollection.fetch().then(function (res) {\n      guildCollection.each(function (guild) {\n        $(\"#guildList\").append(\"\\n                    <div class=\\\"guildBox\\\" data-guild=\".concat(guild.attributes[\"id\"], \">\\n                        <p> \").concat(guild.attributes[\"name\"], \" </p>\\n                        <p> \").concat(guild.attributes[\"anagram\"], \" </p>\\n                        <p> \").concat(guild.attributes[\"points\"], \" </p>\\n                    </div>\\n                    \"));\n      });\n    });\n  },\n  joinGuild: function joinGuild(e) {\n    var guildId = e.currentTarget.getAttribute(\"data-guild\");\n    var guild = new Guild({\n      id: guildId\n    });\n    guild.fetch().then(function (res) {\n      guild.set({\n        \"user\": Cookies.get(\"id\")\n      });\n      guild.save().then(function (res) {\n        Cookies.set(\"guildId\", res[\"id\"]);\n        router.navigate(\"connected/guild\", {\n          trigger: true\n        });\n      });\n    });\n  },\n  updateList: function updateList(e) {\n    axios.get(\"/api/guilds.json?name=\".concat($(\"#guildSearch\").val())).then(function (res) {\n      var object = JSON.parse(res[\"request\"].response);\n      $(\"#guildList\").empty();\n      $.each(object, function (i) {\n        $(\"#guildList\").append(\"\\n                    <div class=\\\"guildBox\\\" data-guild=\".concat(object[i][\"id\"], \">\\n                    <p> \").concat(object[i][\"name\"], \" </p>\\n                    <p> \").concat(object[i][\"anagram\"], \" </p>\\n                    <p> \").concat(object[i][\"points\"], \" </p>\\n                    </div>\\n                \"));\n      });\n    });\n  }\n});\nvar guildJoinContent = new GuildJoinContent({\n  el: \".Center\"\n});\nvar GuildManageContent = Backbone.View.extend({\n  events: {\n    \"keyup #guildManageSearch\": \"updateList\",\n    \"change #selectVal\": \"updateList\",\n    \"click .manageBox\": \"handleClick\",\n    \"change #guildManageSearch\": \"updateList\",\n    \"click #sendDeclaration\": \"sendDeclaration\",\n    \"click #exitDeclare\": \"exitDeclare\",\n    \"click #exitNotif\": \"exitNotif\",\n    \"click #notifWarDeclaration\": \"confirmDeclaration\",\n    \"click #declineWar\": \"declineWar\",\n    \"click #acceptWar\": \"acceptWar\",\n    \"change #dateRange\": \"updateDateWar\",\n    \"click #addWarTime\": \"addWarTime\",\n    \"click .WarTimeBox\": \"removeWarTime\"\n  },\n  render: function render() {\n    this.warTimes = [];\n    this.$el.html(\"\\n        <div id=\\\"select\\\">\\n        <select id=\\\"selectVal\\\">\\n            <option value=\\\"0\\\">ban members</option>\\n        </select>\\n        </div>\\n        <div id=\\\"guildManagment\\\">\\n            <input id=\\\"guildManageSearch\\\"/>\\n            <div id=\\\"list\\\"> </div>\\n        </div>\\n        \");\n    this.updateList();\n    return this;\n  },\n  updateList: function updateList() {\n    $(\"#errorCreate\").remove();\n    axios.get(\"/api/guilds/\".concat(Cookies.get(\"guildId\"))).then(function (res) {\n      axios.get(\"/api/wars/\".concat(res.data[\"name\"])).then(function (res) {\n        if (!res.data && $(\"#warManage\").length == 0) {\n          $(\"#selectVal\").append(\"<option value=\\\"1\\\" id=\\\"warManage\\\">accept war declaration</option>\\n                    <option value=\\\"2\\\">declare war</option>\");\n        }\n      });\n    });\n\n    if ($(\"#selectVal option:selected\").text() == \"declare war\") {\n      axios.get(\"/api/guilds?name=\".concat($(\"#guildManageSearch\").val(), \"&war=true\")).then(function (res) {\n        var object = JSON.parse(res[\"request\"].response);\n        $(\"#list\").empty();\n        $.each(object, function (i) {\n          $(\"#list\").append(\"\\n                    <div class=\\\"manageBox\\\">\\n                        <p id=\\\"name\\\">\".concat(object[i][\"name\"], \"</p>\\n                        <p id=\\\"anagram\\\">\").concat(object[i][\"anagram\"], \"</p>\\n                        <p id=\\\"startWar\\\"> \\u2694 </p>\\n                    </div>\\n                    \"));\n        });\n      });\n    } else if ($(\"#selectVal option:selected\").text() == \"ban members\") {\n      axios.get(\"/api/guilds/\".concat(Cookies.get(\"guildId\"), \"?pseudo=\").concat($(\"#guildManageSearch\").val())).then(function (res) {\n        var object = JSON.parse(res[\"request\"].response);\n        $(\"#list\").empty();\n        $.each(object, function (i) {\n          $(\"#list\").append(\"\\n                        <div class=\\\"manageBox\\\">\\n                            <p id=\\\"name\\\">\".concat(object[i][\"pseudo\"], \"</p>\\n                            <p id=\\\"ban\\\">Ban</p>\\n                        </div>\\n                    \"));\n        });\n      });\n    } else {\n      $(\"#list\").empty();\n      axios.get(\"/api/guilds/\".concat(Cookies.get(\"guildId\"))).then(function (res) {\n        var guild_name = res.data[\"name\"];\n        axios.get(\"/api/declarations?receiver=\".concat(guild_name)).then(function (res) {\n          var object = JSON.parse(res[\"request\"].response);\n          $.each(object, function (i) {\n            $(\"#list\").append(\"\\n                        <div class=\\\"manageBox\\\" id=\\\"notifWarDeclaration\\\" sender=\\\"\".concat(object[i][\"sender\"], \"\\\" start-date=\").concat(object[i][\"start_at\"], \" end-date=\").concat(object[i][\"end_at\"], \">\\n                            <p id=\\\"sender\\\">\").concat(object[i][\"sender\"], \"</p>\\n                            <p id=\\\"points\\\">\").concat(object[i][\"points\"], \" points</p>\\n                        </div>\\n                        \"));\n          });\n        });\n      });\n    }\n  },\n  handleClick: function handleClick(e) {\n    var _this6 = this;\n\n    if ($(\"#selectVal option:selected\").text() == \"ban members\" && $(e.target).html() == \"Ban\") {\n      var user = e.currentTarget.querySelector(\"#name\").innerHTML;\n      axios.patch(\"/api/guilds/\".concat(Cookies.get(\"guildId\"), \"?ban=\").concat(user)).then(function (res) {\n        _this6.updateList();\n      });\n    } else if ($(\"#selectVal option:selected\").text() == \"declare war\" && $(\"#declareDiv\").length == 0) {\n      $(\".Center\").append(\"<div id=\\\"declareDiv\\\" data-guild=\\\"\".concat(e.currentTarget.querySelector(\"#name\").innerHTML, \"\\\">\\n                    <p> How many points do you want to bet ? </p>\\n                    <input id=\\\"pointInput\\\" type=\\\"number\\\" min=\\\"0\\\" placeholder=\\\"points\\\"/>\\n                    <p> Max unanswered match </p>\\n                    <input id=\\\"unanswered\\\" type=\\\"number\\\" placeholder=\\\"max unanswered match\\\"/>\\n                    <p> choose a range date </p>\\n                    <input id=\\\"dateRange\\\"/>\\n                    <p> Choose war times </p>\\n                    <input id=\\\"timeTable\\\"/>\\n                    <p id=\\\"addWarTime\\\">\\u2795</p>\\n                    <div id=\\\"warTimeList\\\">\\n                    </div>\\n                    <div id=\\\"yesno\\\">\\n                        <button id=\\\"sendDeclaration\\\"> declare war </button>\\n                        <button id=\\\"exitDeclare\\\"> exit </button>\\n                    </div>\\n                </div>\\n                \"));\n      $('#dateRange').daterangepicker({\n        autoApply: true,\n        minDate: new Date()\n      });\n      $('#timeTable').daterangepicker({\n        autoApply: true,\n        timePicker: true,\n        minDate: $(\"#dateRange\").val().split(\" - \")[0],\n        maxDate: $(\"#dateRange\").val().split(\" - \")[1],\n        startDate: moment().startOf('hour'),\n        endDate: moment().startOf('hour').add(32, 'hour'),\n        locale: {\n          format: 'M/DD hh:mm A'\n        }\n      });\n    }\n  },\n  sendDeclaration: function sendDeclaration() {\n    var _this7 = this;\n\n    if ($(\"#pointInput\").val() <= 0) {\n      if ($(\"#errorCreate\").length == 0) $(\"#declareDiv\").append(\"<p id=\\\"errorCreate\\\"> Points must be superior than 0 </p>\");\n      return;\n    } else $(\"#errorCreate\").remove();\n\n    if ($(\"#warTimeList > *\").length == 0) {\n      if ($(\"#errorCreate\").length == 0) $(\"#declareDiv\").append(\"<p id=\\\"errorCreate\\\"> You need at least one war time </p>\");\n      return;\n    } else $(\"#errorCreate\").remove();\n\n    var date_range = $(\"#dateRange\").val().split(\" - \");\n\n    if (date_range[0] == date_range[1]) {\n      if ($(\"#errorCreate\").length == 0) $(\"#declareDiv\").append(\"<p id=\\\"errorCreate\\\"> Start date and End date cannot be the same </p>\");\n      return;\n    } else $(\"#errorCreate\").remove();\n\n    axios.get(\"/api/guilds/\".concat(Cookies.get(\"guildId\"))).then(function (res) {\n      var guild_name = res.data[\"name\"];\n\n      if (parseInt(res.data[\"points\"]) < parseInt($(\"#pointInput\").val())) {\n        if ($(\"#errorCreate\").length == 0) $(\"#declareDiv\").append(\"<p id=\\\"errorCreate\\\"> You dont have enought points </p>\");\n        throw new Error('error');\n      } else $(\"#errorCreate\").remove();\n\n      axios({\n        method: 'post',\n        url: '/api/declarations',\n        data: {\n          receiver: $(\"#declareDiv\").attr(\"data-guild\"),\n          points: $(\"#pointInput\").val(),\n          start_at: new Date(date_range[0]),\n          end_at: new Date(date_range[1]),\n          sender: guild_name,\n          timetable: _this7.warTimes,\n          unanswered: $(\"#unanswered\").val()\n        }\n      }).then(function (res) {\n        $(\"#declareDiv\").remove();\n      })[\"catch\"](function (err) {\n        return;\n      });\n    });\n  },\n  exitDeclare: function exitDeclare() {\n    $(\"#declareDiv\").remove();\n  },\n  confirmDeclaration: function confirmDeclaration(e) {\n    if ($(\"#notifWar\").length == 0) {\n      $(\".Center\").append(\"<div id=\\\"notifWar\\\">\\n                    <h1> sender : \".concat(e.currentTarget.getAttribute(\"sender\"), \" </h1>\\n                    <h1> start date : \").concat(new Date(e.currentTarget.getAttribute(\"start-date\")).toDateString(), \" </h1>\\n                    <h1> end date : \").concat(new Date(e.currentTarget.getAttribute(\"end-date\")).toDateString(), \" </h1>\\n                    <div id=\\\"warTimeList\\\">\\n                    </div>\\n                    <div id=\\\"yesno\\\">\\n                        <button id=\\\"acceptWar\\\" declarationId=\\\"\\\"> ACCEPT </button>\\n                        <button sender=\\\"\").concat(e.currentTarget.getAttribute(\"sender\"), \"\\\" id=\\\"declineWar\\\"> DECLINE </button>\\n                    </div>\\n                </div>\\n            \"));\n      axios.get(\"/api/guilds/\".concat(Cookies.get(\"guildId\"))).then(function (res) {\n        var guild_name = res.data[\"name\"];\n        axios.get(\"/api/declarations?receiver=\".concat(guild_name)).then(function (res) {\n          $(\"#acceptWar\").attr(\"declarationId\", res.data[0][\"id\"]);\n          var timeTable = JSON.parse(res[\"request\"].response)[0][\"timetable\"];\n          $.each(timeTable, function (i) {\n            $(\"#warTimeList\").append(\"\\n                                <p>\".concat(timeTable[i], \"</p>\\n                            \"));\n          });\n        });\n      });\n    }\n  },\n  exitNotif: function exitNotif(e) {\n    $(\"#notifWar\").remove();\n  },\n  declineWar: function declineWar(e) {\n    var _this8 = this;\n\n    axios[\"delete\"](\"/api/declarations/\".concat(e.currentTarget.getAttribute(\"sender\"))).then(function (res) {\n      $(\"#notifWar\").remove();\n\n      _this8.updateList();\n    });\n  },\n  updateDateWar: function updateDateWar() {\n    $('#timeTable').daterangepicker({\n      autoApply: true,\n      timePicker: true,\n      minDate: $(\"#dateRange\").val().split(\" - \")[0],\n      maxDate: $(\"#dateRange\").val().split(\" - \")[1],\n      startDate: moment().startOf('hour'),\n      endDate: moment().startOf('hour').add(32, 'hour'),\n      locale: {\n        format: 'M/DD hh:mm A'\n      }\n    });\n    $(\"#warTimeList\").empty();\n    this.warTimes = [];\n  },\n  addWarTime: function addWarTime(e) {\n    this.warTimes.push($(\"#timeTable\").val());\n    $(\"#warTimeList\").append(\"\\n        <div class=\\\"WarTimeBox\\\">\\n        <p>\".concat($(\"#timeTable\").val(), \"</p>\\n            <span class=\\\"RedCross\\\"> \\u274C </span>\\n            </div>\\n        \"));\n  },\n  removeWarTime: function removeWarTime(e) {\n    if ($(e.target).attr(\"class\") == \"RedCross\") {\n      for (var i = 0; i < this.warTimes.length; i++) {\n        if (this.warTimes[i] == $(e.currentTarget).find(\"p\")[0].innerText) {\n          this.warTimes.splice(i, 1);\n        }\n      }\n\n      $(e.currentTarget).remove();\n    }\n  },\n  acceptWar: function acceptWar(e) {\n    var _this9 = this;\n\n    axios.post(\"/api/wars?id=\".concat($(e.target).attr(\"declarationId\"))).then(function (res) {\n      $(\"#notifWar\").remove();\n\n      _this9.render();\n\n      if (res.data[\"error\"]) {\n        if (!$(\"#errorCreate\").length) $(\".Center\").append(\"<p id=\\\"errorCreate\\\">\".concat(res.data[\"error\"], \"</p>\"));\n      } else $(\"#errorCreate\").remove();\n    });\n  }\n});\nvar guildManageContent = new GuildManageContent({\n  el: \".Center\"\n});\nexport { guildCreateContent, guildContent, guildJoinContent, guildManageContent };","map":{"version":3,"sources":["/home/mathis/Documents/dernier/app/javascript/BackboneViews/GuildView.js"],"names":["router","User","Guild","guildCollection","GuildCollection","War","userCollection","Battle","Battles","GuildListView","Guild_matching_popup","Backbone","View","extend","render","self","$","remove","traitement","chrono","setTimeout","suiteTraitement","stop_matchine","html","removePopup","append","battle","id","destroy","data","type_battle","processData","then","mouseIn","hover","mouseup","click","matching_popup","GuildContent","initialize","guildListView","events","matchingPopupIsOpen","user","Cookies","get","fetch","res","$el","guild","src","flag","length","my_guild","axios","join","navigate","trigger","create","leave","removeConfirmDiv","exitGuild","save","guild_id","guildStatus","manageGuild","destroyGuildConfirm","destroyGuild","exitDestroy","displayWarMenu","e","removeWarMenu","Date","toDateString","alert","each","i","surrender","war","guildContent","el","GuildCreateContent","saveGuild","val","formData","FormData","document","getElementById","files","file","blob","Blob","url","method","body","set","guildCreateContent","GuildJoinContent","attributes","joinGuild","guildId","currentTarget","getAttribute","updateList","object","JSON","parse","response","empty","guildJoinContent","GuildManageContent","warTimes","text","guild_name","handleClick","target","querySelector","innerHTML","patch","daterangepicker","autoApply","minDate","timePicker","split","maxDate","startDate","moment","startOf","endDate","add","locale","format","sendDeclaration","date_range","parseInt","Error","receiver","attr","points","start_at","end_at","sender","timetable","unanswered","err","exitDeclare","confirmDeclaration","timeTable","exitNotif","declineWar","updateDateWar","addWarTime","push","removeWarTime","find","innerText","splice","acceptWar","post","guildManageContent"],"mappings":"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","sourcesContent":["import { router } from \"../BackboneRouter/application_router\";\nimport { User } from \"../BackboneModel/user_model\"\nimport { Guild, guildCollection, GuildCollection } from \"../BackboneModel/guild_model\"\nimport { War } from \"../BackboneModel/war_model\"\nimport { userCollection } from \"../BackboneModel/user_model\"\nimport { Battle, Battles } from \"../BackboneModel/battle_list_model\"\nimport { GuildListView } from \"../BackboneViews/GuildListView\"\n\nvar Guild_matching_popup = Backbone.View.extend({\n    render: function (self) {\n        $(\".PopUp-guild-matching\").remove()\n        if (true) {\n            var chrono = 15;\n            self.stop_matchine = false;\n\n            $(\".Center\").append('<div class=\"PopUp PopUp-guild-matching\" id=\"popup-profil\">\\\n                <input type=\"button\" class=\"popup-social-hover\" id=\"popup-chatroom-administration-quit\" value=\"✖\"></input>' +\n                '<input type=\"button\" class=\"popup-social-hover\" id=\"popup-chatroom-administration-refresh\" value=\"⟳\"></input>\\\n                <h2 id=\"title-popup-chatroom-pannel\">' + 'search match' + '</h2>\\\n                <p id=\"chrono\"><p>\\\n                <img id=\"img-chargement-gif\" src=\"https://thumbs.gfycat.com/KnobbyWeirdIlladopsis-size_restricted.gif\"><image>\\\n                </div>');\n\n            var removePopup = function () {\n                self.stop_matchine = true;\n                var battle = new Battle({ id: 'tournament' })\n                battle.destroy({ data: { type_battle: 'tournament' }, processData: true }).then(function () {\n                    $(\".PopUp\").remove()\n                })\n                $(\"#popUpWar\").remove();\n                $(\".BackClick\").remove();\n                $(\".PopUp\").remove()\n                self.mouseIn = true;\n            }\n\n            function traitement(chrono) {\n                setTimeout(suiteTraitement, 1000, chrono)\n            }\n            function suiteTraitement(chrono) {\n                if (self.stop_matchine == true) {\n                    // nothing\n                } else if (chrono > 0) {\n                    traitement(chrono - 1);\n                    $('#chrono').html(chrono)\n                } else {\n                    removePopup();\n                }\n            }\n            traitement(chrono);\n\n            self.mouseIn = false;\n\n            $(\".PopUp\").hover(function () {\n                self.mouseIn = true;\n            }, function () {\n                self.mouseIn = false;\n            });\n\n            $(\"body\").mouseup(function () {\n                if (self.mouseIn == false)\n                    removePopup();\n            });\n\n            $(\"#popup-chatroom-administration-quit\").click(function () {\n                removePopup();\n            });\n        };\n    }\n})\n\nvar matching_popup = new Guild_matching_popup();\n\nvar GuildContent = Backbone.View.extend({\n\n    initialize: function () {\n        this.guildListView = new GuildListView();\n    },\n\n    events:\n    {\n        \"click #joinGuild\": \"join\",\n        \"click #createGuild\": \"create\",\n        \"click #leaveGuild\": \"leave\",\n        \"click #no\": \"removeConfirmDiv\",\n        \"click #yes\": \"exitGuild\",\n        \"click #manageGuild\": \"manageGuild\",\n        \"click #destroyGuild\": \"destroyGuildConfirm\",\n        \"click #destroyGuildButton\": \"destroyGuild\",\n        \"click #exitDestroy\": \"exitDestroy\",\n        \"click #warMenu\": \"displayWarMenu\",\n        \"click #quitPopUp\": \"removeWarMenu\",\n        \"click #giveUpWar\": \"surrender\",\n        \"click #settingGuildButton\": \"settings\"\n    },\n\n    render: function () {\n        var self = this;\n        self.matchingPopupIsOpen = false;\n        var user = new User({ id: Cookies.get(\"login\") });\n        user.fetch().then((res) => {\n            if (res[\"guild_id\"] == null) {\n                this.$el.html(`\n                <div id=\"flex_div\">\n                    <button id=\"joinGuild\"> Join a Guild </button>\n                    <button id=\"createGuild\"> Create a Guild </button>\n                </div>\n                `);\n                self.guildListView.render();\n            }\n            else {\n                var guild = new Guild({ id: res[\"guild_id\"] });\n                var user = res;\n                guild.fetch().then((res) => {\n                    var src;\n                    if (res.flag.length > 0)\n                        src = res.flag\n                    else\n                        src = \"https://upload.wikimedia.org/wikipedia/commons/thumb/4/47/Pirate_Flag_of_Jack_Rackham.svg/1024px-Pirate_Flag_of_Jack_Rackham.svg.png\";\n                    this.$el.html(`\n                        <div id=\"flex_div\">\n                        <img src=\"${src}\"> </img>\n                        <h1> ${res[\"name\"]} </h1>\n                        <h1> ${res[\"anagram\"]} </h1>\n                        <h1> Points: ${res[\"points\"]} </h1> \n                        </div>`);\n                    if (user[\"guildStatus\"] == \"owner\") {\n                        $(\"#flex_div\").append(`<button id=\"manageGuild\"> manage the guild </button>`);\n                        $(\"#flex_div\").append(`<button id=\"destroyGuild\"> destroy the guild </button>`);\n                    }\n                    else {\n                        $(\"#flex_div\").append(`<button id=\"leaveGuild\"> leave the guild </button>`);\n                    }\n                    self.guildListView.render();\n                })\n            }\n        }).then(() => {\n            var guild = new Guild({ id: Cookies.get(\"guildId\") });\n            guild.fetch().then((res) => {\n                if (res[\"error\"]) {\n                    return;\n                }\n                var my_guild = res;\n                axios.get(`/api/wars/${res[\"name\"]}`).then((res) => {\n                    if (res.data) {\n                        this.data = res.data;\n                        axios.get(`/api/users/${Cookies.get(\"login\")}`).then((res) => {\n                            if (res.data[\"guild_id\"] != null) {\n                                $(\"#flex_div\").append(`<button id=\"warMenu\"> War menu </button>`);\n                            }\n                        });\n                    };\n                });\n            });\n        });\n    },\n    join: function () {\n        router.navigate(\"connected/guild/join\", { trigger: true })\n    },\n    create: function () {\n        router.navigate(\"connected/guild/create\", { trigger: true })\n    },\n    leave: function () {\n        $(\".Center\").append(\n            `<div id=\"confirmDiv\">\n            <h2> Are you sure you want to leave the guild ? </h2>\n            <div id=\"yesno\">\n                <button id=\"yes\"> yes </button>\n                <button id=\"no\"> no </button>\n            </div>\n        </div>\n        `)\n    },\n    removeConfirmDiv: function () {\n        $(\"#confirmDiv\").remove();\n    },\n    exitGuild: function () {\n        var user = new User({ id: Cookies.get(\"login\") });\n        user.fetch();\n        user.save({ guild_id: null, guildStatus: null }).then(() => {\n            $(\"#confirmDiv\").remove();\n            this.render();\n        });\n    },\n    manageGuild: function () {\n        router.navigate(\"connected/guild/manage\", { trigger: true })\n    },\n    destroyGuildConfirm: function () {\n        if ($(\"#popUpDestroy\").length == 0) {\n            $(\".Center\").append(\n                `<div id=\"popUpDestroy\" class=\"PopUp\">\n                    <h1> Are you sure you want to destroy the guild ? </h1>\n                    <div id=\"yesno\">\n                        <button id=\"destroyGuildButton\"> destroy guild </button>\n                        <button id=\"exitDestroy\"> exit </button>\n                    </div>\n                </div>\n            `)\n        }\n    },\n    destroyGuild: function () {\n        axios.delete(`/api/guilds/${Cookies.get(\"guildId\")}`).then((res) => {\n            this.render();\n        });\n        $(\"#popUpDestroy\").remove();\n    },\n    exitDestroy: function () {\n        $(\"#popUpDestroy\").remove();\n    },\n    displayWarMenu: function (e) {\n        var self = this;\n        $(\"body\").append(`<div class=\"BackClick\"></div>`);\n        $(\".BackClick\").click(() => {\n            this.removeWarMenu();\n        });\n        $(\".Center\").append(`\n            <div class=\"PopUp\" id=\"popUpWar\">\n                <h1> ${this.data[\"player1\"]} <span style=\"color: red\" > VS </span> ${this.data[\"player2\"]} </h1>\n                <h3> <span style=\"color: #d4af37; font-size: 1.5em\">PRIZE :  ${this.data[\"prize\"]} </span></h3>\n                <p> ${this.data[\"player1\"]} points : ${this.data[\"player1_points\"]} </p>\n                <p> ${this.data[\"player2\"]} points : ${this.data[\"player2_points\"]} </p>\n                <h3> <span style=\"color: red; font-size: 1.5em\">MAX UNANSWERED MATCHS : ${this.data[\"max_unanswered\"]} </span></h3>\n                <p> unanswered match ${this.data[\"player1\"]}: ${this.data[\"player1_unanswered\"]} </p>\n                <p> unanswered match ${this.data[\"player2\"]}: ${this.data[\"player2_unanswered\"]} </p>\n                <h3> <span style=\"color: green; font-size: 1.5em\"> FROM ${new Date(this.data[\"start_at\"]).toDateString()} TO ${new Date(this.data[\"end_at\"]).toDateString()} </span> </h3>\n                <div id=\"warTimeList\">\n                </div>\n                <button id=\"giveUpWar\"> surrender </button> \n                <button id=\"battleGuildWar\"> guild battle </button> \n                <p class=\"QuitPopUp\" id=\"quitPopUp\">❌</p>\n            </div>\n        `)\n\n        $(\"#battleGuildWar\").click(function () {\n            var battle = new Battle({ type_battle: 'guild' })\n            battle.save().then(function (res) {\n                if (res[\"possible\"] == true) {\n                    self.removeWarMenu();\n                    matching_popup.render(self)\n                } else {\n                    alert(\"unable to start matchmaking:\\n- match in progress\\n- already pending\\n- you are not in a combat period\")\n                }\n            })\n        })\n\n        $.each(this.data[\"timetable\"], (i) => {\n            $(\"#warTimeList\").append(`\n                <p>${this.data[\"timetable\"][i]}</p>\n            `)\n        });\n        //si ya match afficher score sinon bouton pour defier\n    },\n    removeWarMenu: function () {\n        $(\"#popUpWar\").remove();\n        $(\".BackClick\").remove();\n    },\n    surrender: function () {\n        var war = new War({ id: this.data.id });\n        war.fetch().then(() => {\n            war.destroy().then((res) => {\n                $(\".BackClick\").remove();\n                this.render();\n            });\n        });\n    },\n});\n\nvar guildContent = new GuildContent({ el: \".Center\" })\n\nvar GuildCreateContent = Backbone.View.extend({\n    events:\n    {\n        \"click #saveGuildButton\": \"saveGuild\"\n    },\n    render: function () {\n        this.$el.html(`\n        <div id=\"flex_div\">\n       <h2 id=\"settingsTitle\"> Create a Guild </h2>\n        <div id=\"inputDiv\">\n        <input id=\"guildName\" placeholder=\"name\"/>\n        <input id=\"guildAnagram\" placeholder=\"anagram\"/>\n        </div>\n        <div class=\"CheckBox\">\n        <p> select an flag image </p>\n        <label id=\"fileLabel\" for=\"fileUpload\"> Select a file </label>\n        <input id=\"fileUpload\" type=\"file\" accept=\"image/*\"/>\n        </div>\n        <button id=\"saveGuildButton\"> create </button>\n        </div>\n        `);\n        return this;\n    },\n    saveGuild: function () {\n        if ($(\"#guildName\").val().length < 3) {\n            if ($(\"#errorCreate\").length == 0)\n                $(\".Center\").append(`<p id=\"errorCreate\"> The guild name must be at least 3 characters </p>`);\n            return;\n        }\n        else\n            $(\"#errorCreate\").remove();\n        if ($(\"#guildAnagram\").val().length > 5) {\n            if ($(\"#errorCreate\").length == 0)\n                $(\".Center\").append(`<p id=\"errorCreate\"> The guild anagram must be less than 6 characters </p>`);\n            return;\n        }\n        else\n            $(\"#errorCreate\").remove();\n        if ($(\"#guildAnagram\").val().length < 2) {\n            if ($(\"#errorCreate\").length == 0)\n                $(\".Center\").append(`<p id=\"errorCreate\"> The guild anagram must at least two character long </p>`);\n            return;\n        }\n        else\n            $(\"#errorCreate\").remove();\n        var user = new User({ id: Cookies.get(\"login\") });\n        user.fetch().then((res) => {\n            const formData = new FormData();\n            if (document.getElementById(\"fileUpload\").files.length > 0) {\n                var file = document.getElementById(\"fileUpload\").files[0];\n                var blob = new Blob([file]);\n                formData.append(\"flag\", blob);\n            }\n            formData.append(\"name\", $(\"#guildName\").val());\n            formData.append(\"points\", 0);\n            formData.append(\"anagram\", $(\"#guildAnagram\").val());\n            formData.append(\"user\", user[\"id\"]);\n            if (document.getElementById(\"fileUpload\").files.length > 0) {\n                var file = document.getElementById(\"fileUpload\").files[0];\n                var blob = new Blob([file]);\n                formData.append(\"flag\", blob);\n            }\n            axios({\n                url: `/api/guilds`,\n                method: \"POST\",\n                data: formData\n            }).then((res) => {\n                if (res.data.body == \"guild name already exist in the database\") {\n                    if ($(\"#errorCreate\").length == 0)\n                        $(\".Center\").append(`<p id=\"errorCreate\"> The guild name is already register </p>`);\n                    return;\n                }\n                else\n                    $(\"#errorCreate\").remove();\n                if (res.data.body == \"guild anagram already exist in the database\") {\n                    if ($(\"#errorCreate\").length == 0)\n                        $(\".Center\").append(`<p id=\"errorCreate\"> The guild anagram is already register </p>`);\n                    return;\n                }\n                else\n                    $(\"#errorCreate\").remove();\n                Cookies.set(\"guildId\", res.data[\"id\"]);\n                router.navigate(\"connected/guild\", { trigger: true })\n            });\n        });\n    }\n});\n\nvar guildCreateContent = new GuildCreateContent({ el: \".Center\" });\n\nvar GuildJoinContent = Backbone.View.extend({\n    events:\n    {\n        \"click .guildBox\": \"joinGuild\",\n        \"keyup #guildSearch\": \"updateList\",\n    },\n    render: function () {\n        this.$el.html(\n            `<h1> Join a guild </h1>\n            <input placeholder=\"search a guild\" id=\"guildSearch\"/>\n            <div id=\"guildList\">\n            </div>\n            `)\n        guildCollection.fetch().then((res) => {\n            guildCollection.each((guild) => {\n                $(\"#guildList\").append(`\n                    <div class=\"guildBox\" data-guild=${guild.attributes[\"id\"]}>\n                        <p> ${guild.attributes[\"name\"]} </p>\n                        <p> ${guild.attributes[\"anagram\"]} </p>\n                        <p> ${guild.attributes[\"points\"]} </p>\n                    </div>\n                    `)\n            })\n        })\n    },\n    joinGuild: function (e) {\n        var guildId = e.currentTarget.getAttribute(\"data-guild\");\n        var guild = new Guild({ id: guildId });\n        guild.fetch().then((res) => {\n            guild.set({ \"user\": Cookies.get(\"id\") });\n            guild.save().then((res) => {\n                Cookies.set(\"guildId\", res[\"id\"]);\n                router.navigate(\"connected/guild\", { trigger: true })\n            })\n        })\n    },\n    updateList: function (e) {\n        axios.get(`/api/guilds.json?name=${$(\"#guildSearch\").val()}`).then((res) => {\n            var object = JSON.parse(res[\"request\"].response);\n            $(\"#guildList\").empty();\n            $.each(object, (i) => {\n                $(\"#guildList\").append(`\n                    <div class=\"guildBox\" data-guild=${object[i][\"id\"]}>\n                    <p> ${object[i][\"name\"]} </p>\n                    <p> ${object[i][\"anagram\"]} </p>\n                    <p> ${object[i][\"points\"]} </p>\n                    </div>\n                `)\n            })\n        })\n    }\n});\n\nvar guildJoinContent = new GuildJoinContent({ el: \".Center\" });\n\nvar GuildManageContent = Backbone.View.extend({\n    events: {\n        \"keyup #guildManageSearch\": \"updateList\",\n        \"change #selectVal\": \"updateList\",\n        \"click .manageBox\": \"handleClick\",\n        \"change #guildManageSearch\": \"updateList\",\n        \"click #sendDeclaration\": \"sendDeclaration\",\n        \"click #exitDeclare\": \"exitDeclare\",\n        \"click #exitNotif\": \"exitNotif\",\n        \"click #notifWarDeclaration\": \"confirmDeclaration\",\n        \"click #declineWar\": \"declineWar\",\n        \"click #acceptWar\": \"acceptWar\",\n        \"change #dateRange\": \"updateDateWar\",\n        \"click #addWarTime\": \"addWarTime\",\n        \"click .WarTimeBox\": \"removeWarTime\"\n    },\n    render: function () {\n        this.warTimes = [];\n        this.$el.html(`\n        <div id=\"select\">\n        <select id=\"selectVal\">\n            <option value=\"0\">ban members</option>\n        </select>\n        </div>\n        <div id=\"guildManagment\">\n            <input id=\"guildManageSearch\"/>\n            <div id=\"list\"> </div>\n        </div>\n        `);\n        this.updateList();\n        return this\n    },\n    updateList: function () {\n        $(\"#errorCreate\").remove();\n        axios.get(`/api/guilds/${Cookies.get(\"guildId\")}`).then((res) => {\n            axios.get(`/api/wars/${res.data[\"name\"]}`).then((res) => {\n                if (!res.data && $(\"#warManage\").length == 0) {\n                    $(\"#selectVal\").append(`<option value=\"1\" id=\"warManage\">accept war declaration</option>\n                    <option value=\"2\">declare war</option>`)\n                }\n            });\n        });\n        if ($(\"#selectVal option:selected\").text() == \"declare war\") {\n            axios.get(`/api/guilds?name=${$(\"#guildManageSearch\").val()}&war=true`).then((res) => {\n\n                var object = JSON.parse(res[\"request\"].response);\n                $(\"#list\").empty();\n                $.each(object, (i) => {\n                    $(\"#list\").append(`\n                    <div class=\"manageBox\">\n                        <p id=\"name\">${object[i][\"name\"]}</p>\n                        <p id=\"anagram\">${object[i][\"anagram\"]}</p>\n                        <p id=\"startWar\"> ⚔ </p>\n                    </div>\n                    `)\n                })\n            })\n        }\n        else if ($(\"#selectVal option:selected\").text() == \"ban members\") {\n            axios.get(`/api/guilds/${Cookies.get(\"guildId\")}?pseudo=${$(\"#guildManageSearch\").val()}`).then((res) => {\n                var object = JSON.parse(res[\"request\"].response);\n                $(\"#list\").empty();\n                $.each(object, (i) => {\n                    $(\"#list\").append(`\n                        <div class=\"manageBox\">\n                            <p id=\"name\">${object[i][\"pseudo\"]}</p>\n                            <p id=\"ban\">Ban</p>\n                        </div>\n                    `)\n                })\n            })\n        }\n        else {\n            $(\"#list\").empty();\n            axios.get(`/api/guilds/${Cookies.get(\"guildId\")}`).then((res) => {\n                var guild_name = res.data[\"name\"];\n                axios.get(`/api/declarations?receiver=${guild_name}`).then((res) => {\n                    var object = JSON.parse(res[\"request\"].response);\n                    $.each(object, (i) => {\n                        $(\"#list\").append(`\n                        <div class=\"manageBox\" id=\"notifWarDeclaration\" sender=\"${object[i][\"sender\"]}\" start-date=${object[i][\"start_at\"]} end-date=${object[i][\"end_at\"]}>\n                            <p id=\"sender\">${object[i][\"sender\"]}</p>\n                            <p id=\"points\">${object[i][\"points\"]} points</p>\n                        </div>\n                        `)\n                    });\n                })\n            })\n        }\n    },\n    handleClick: function (e) {\n        if ($(\"#selectVal option:selected\").text() == \"ban members\" && $(e.target).html() == \"Ban\") {\n            var user = e.currentTarget.querySelector(\"#name\").innerHTML;\n            axios.patch(`/api/guilds/${Cookies.get(\"guildId\")}?ban=${user}`).then((res) => {\n                this.updateList();\n            });\n        }\n        else if ($(\"#selectVal option:selected\").text() == \"declare war\" && $(\"#declareDiv\").length == 0) {\n            $(\".Center\").append(\n                `<div id=\"declareDiv\" data-guild=\"${e.currentTarget.querySelector(\"#name\").innerHTML}\">\n                    <p> How many points do you want to bet ? </p>\n                    <input id=\"pointInput\" type=\"number\" min=\"0\" placeholder=\"points\"/>\n                    <p> Max unanswered match </p>\n                    <input id=\"unanswered\" type=\"number\" placeholder=\"max unanswered match\"/>\n                    <p> choose a range date </p>\n                    <input id=\"dateRange\"/>\n                    <p> Choose war times </p>\n                    <input id=\"timeTable\"/>\n                    <p id=\"addWarTime\">➕</p>\n                    <div id=\"warTimeList\">\n                    </div>\n                    <div id=\"yesno\">\n                        <button id=\"sendDeclaration\"> declare war </button>\n                        <button id=\"exitDeclare\"> exit </button>\n                    </div>\n                </div>\n                `)\n            $('#dateRange').daterangepicker({\n                autoApply: true,\n                minDate: new Date()\n            });\n            $('#timeTable').daterangepicker({\n                autoApply: true,\n                timePicker: true,\n                minDate: $(\"#dateRange\").val().split(\" - \")[0],\n                maxDate: $(\"#dateRange\").val().split(\" - \")[1],\n                startDate: moment().startOf('hour'),\n                endDate: moment().startOf('hour').add(32, 'hour'),\n                locale: {\n                    format: 'M/DD hh:mm A'\n                }\n            });\n        }\n    },\n    sendDeclaration: function () {\n        if ($(\"#pointInput\").val() <= 0) {\n            if ($(\"#errorCreate\").length == 0)\n                $(\"#declareDiv\").append(`<p id=\"errorCreate\"> Points must be superior than 0 </p>`);\n            return;\n        }\n        else\n            $(\"#errorCreate\").remove();\n        if ($(\"#warTimeList > *\").length == 0) {\n            if ($(\"#errorCreate\").length == 0)\n                $(\"#declareDiv\").append(`<p id=\"errorCreate\"> You need at least one war time </p>`);\n            return;\n        }\n        else\n            $(\"#errorCreate\").remove();\n        var date_range = $(\"#dateRange\").val().split(\" - \");\n        if (date_range[0] == date_range[1]) {\n            if ($(\"#errorCreate\").length == 0)\n                $(\"#declareDiv\").append(`<p id=\"errorCreate\"> Start date and End date cannot be the same </p>`);\n            return;\n        }\n        else\n            $(\"#errorCreate\").remove();\n        axios.get(`/api/guilds/${Cookies.get(\"guildId\")}`).then((res) => {\n            var guild_name = res.data[\"name\"];\n            if (parseInt(res.data[\"points\"]) < parseInt($(\"#pointInput\").val())) {\n                if ($(\"#errorCreate\").length == 0)\n                    $(\"#declareDiv\").append(`<p id=\"errorCreate\"> You dont have enought points </p>`);\n                throw new Error('error');\n            }\n            else\n                $(\"#errorCreate\").remove();\n            axios({\n                method: 'post',\n                url: '/api/declarations',\n                data: {\n                    receiver: $(\"#declareDiv\").attr(\"data-guild\"),\n                    points: $(\"#pointInput\").val(),\n                    start_at: new Date(date_range[0]),\n                    end_at: new Date(date_range[1]),\n                    sender: guild_name,\n                    timetable: this.warTimes,\n                    unanswered: $(\"#unanswered\").val()\n                }\n            }).then((res) => {\n                $(\"#declareDiv\").remove();\n            }).catch((err) => {\n                return;\n            })\n        });\n    },\n    exitDeclare: function () {\n        $(\"#declareDiv\").remove();\n    },\n    confirmDeclaration: function (e) {\n        if ($(\"#notifWar\").length == 0) {\n            $(\".Center\").append(\n                `<div id=\"notifWar\">\n                    <h1> sender : ${e.currentTarget.getAttribute(\"sender\")} </h1>\n                    <h1> start date : ${new Date(e.currentTarget.getAttribute(\"start-date\")).toDateString()} </h1>\n                    <h1> end date : ${new Date(e.currentTarget.getAttribute(\"end-date\")).toDateString()} </h1>\n                    <div id=\"warTimeList\">\n                    </div>\n                    <div id=\"yesno\">\n                        <button id=\"acceptWar\" declarationId=\"\"> ACCEPT </button>\n                        <button sender=\"${e.currentTarget.getAttribute(\"sender\")}\" id=\"declineWar\"> DECLINE </button>\n                    </div>\n                </div>\n            `);\n            axios.get(`/api/guilds/${Cookies.get(\"guildId\")}`).then((res) => {\n                var guild_name = res.data[\"name\"];\n                axios.get(`/api/declarations?receiver=${guild_name}`).then((res) => {\n                    $(\"#acceptWar\").attr(\"declarationId\", res.data[0][\"id\"]);\n                    var timeTable = JSON.parse(res[\"request\"].response)[0][\"timetable\"];\n                    $.each(timeTable, (i) => {\n                        $(\"#warTimeList\").append(`\n                                <p>${timeTable[i]}</p>\n                            `)\n                    });\n                })\n            })\n        }\n    },\n    exitNotif: function (e) {\n        $(\"#notifWar\").remove();\n    },\n    declineWar: function (e) {\n        axios.delete(`/api/declarations/${e.currentTarget.getAttribute(\"sender\")}`).then((res) => {\n            $(\"#notifWar\").remove();\n            this.updateList();\n        })\n    },\n    updateDateWar: function () {\n        $('#timeTable').daterangepicker({\n            autoApply: true,\n            timePicker: true,\n            minDate: $(\"#dateRange\").val().split(\" - \")[0],\n            maxDate: $(\"#dateRange\").val().split(\" - \")[1],\n            startDate: moment().startOf('hour'),\n            endDate: moment().startOf('hour').add(32, 'hour'),\n            locale: {\n                format: 'M/DD hh:mm A'\n            }\n        });\n        $(\"#warTimeList\").empty();\n        this.warTimes = [];\n    },\n    addWarTime: function (e) {\n        this.warTimes.push($(\"#timeTable\").val());\n        $(\"#warTimeList\").append(`\n        <div class=\"WarTimeBox\">\n        <p>${$(\"#timeTable\").val()}</p>\n            <span class=\"RedCross\"> ❌ </span>\n            </div>\n        `)\n    },\n    removeWarTime: function (e) {\n        if ($(e.target).attr(\"class\") == \"RedCross\") {\n            for (var i = 0; i < this.warTimes.length; i++) {\n                if (this.warTimes[i] == $(e.currentTarget).find(\"p\")[0].innerText) {\n                    this.warTimes.splice(i, 1);\n                }\n            }\n            $(e.currentTarget).remove();\n        }\n    },\n    acceptWar: function (e) {\n        axios.post(`/api/wars?id=${$(e.target).attr(\"declarationId\")}`).then((res) => {\n            $(\"#notifWar\").remove();\n            this.render();\n            if (res.data[\"error\"]) {\n                if (!$(\"#errorCreate\").length)\n                    $(\".Center\").append(`<p id=\"errorCreate\">${res.data[\"error\"]}</p>`)\n            }\n            else\n                $(\"#errorCreate\").remove();\n        });\n    }\n});\n\nvar guildManageContent = new GuildManageContent({ el: \".Center\" });\n\nexport { guildCreateContent, guildContent, guildJoinContent, guildManageContent };"]},"metadata":{},"sourceType":"module"}