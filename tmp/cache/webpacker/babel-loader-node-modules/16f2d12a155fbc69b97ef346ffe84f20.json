{"ast":null,"code":"import { router } from \"../BackboneRouter/application_router\";\nimport { User } from \"../BackboneModel/user_model\";\nimport { getUrlParam, getCookie, imageExists } from \"../utils/utils_1\";\nvar ConnectedContent = Backbone.View.extend({\n  events: {\n    \"click #settingsButton\": \"settingsClicked\"\n  },\n  render: function render() {\n    var _this = this;\n\n    if (Cookies.get(\"need_reload\") == \"true\") {\n      document.location.reload(false);\n      Cookies.set(\"need_reload\", \"false\");\n    }\n\n    $(\"#errorCreate\").remove();\n    var src;\n    var pseudo;\n    var user = new User({\n      id: Cookies.get(\"login\")\n    });\n    pseudo = Cookies.get(\"pseudo\");\n    src = Cookies.get(\"url\");\n\n    if (src == \"null\" || src.length == 0) {\n      src = \"https://portal.staralliance.com/cms/aux-pictures/prototype-images/avatar-default.png\";\n    } else if (!imageExists(src)) {\n      user.fetch().then(function (res) {\n        src = res[\"url\"];\n      });\n    }\n\n    if (pseudo == \"null\") {\n      user.fetch().then(function (res) {\n        pseudo = res[\"pseudo\"];\n\n        _this.displayHtml(pseudo, src);\n      });\n    } else this.displayHtml(pseudo, src);\n  },\n  displayHtml: function displayHtml(pseudo, src) {\n    var _this2 = this;\n\n    axios.get(\"/api/users/\".concat(Cookies.get(\"login\"))).then(function (res) {\n      _this2.$el.html(\"\\n            <div id=\\\"flex_div\\\">\\n                <img src=\\\"\".concat(src, \"\\\"> </img>\\n                <h1> \").concat(pseudo, \" </h1>\\n                <h2> rank: \").concat(res[\"data\"][\"rank\"], \" </h2>\\n                <h2> wins: \").concat(res[\"data\"][\"win\"], \" </h2>\\n                <h2> loss: \").concat(res[\"data\"][\"loss\"], \" </h2>\\n                <button id=\\\"settingsButton\\\"> settings </button>\\n            </div>\\n            \"));\n\n      return _this2;\n    });\n  },\n  settingsClicked: function settingsClicked() {\n    router.navigate(\"connected/settings\", {\n      trigger: true\n    });\n  }\n});\nvar ConnectedMenu = Backbone.View.extend({\n  events: {\n    \"click #play\": \"play\",\n    \"click #guild\": \"guild\",\n    \"click #disconnect\": \"disconnect\",\n    \"click #tournament\": \"tournament\"\n  },\n  render: function render() {\n    this.$el.html(\" <div class=\\\"NavBar\\\">\\n            <h1 id=\\\"title\\\"> Ultimate Pong Tournament </h1>\\n                <div>\\n                    <h1 id=\\\"play\\\"> Play </h1>\\n                    <h1 id=\\\"tournament\\\"> Tournament </h1>\\n                    <h1 id=\\\"guild\\\"> Guild </h1>\\n                    <h1 id=\\\"disconnect\\\"> Disconnect </h1>\\n                </div>\\n            </div>\");\n    return this;\n  },\n  home: function home() {\n    router.navigate(\"connected/play\", {\n      trigger: true\n    });\n  },\n  play: function play() {\n    router.navigate(\"connected/play\", {\n      trigger: true\n    });\n  },\n  guild: function guild() {\n    router.navigate(\"connected/guild\", {\n      trigger: true\n    });\n  },\n  disconnect: function disconnect() {\n    Cookies.remove(\"url\");\n    Cookies.remove(\"login\");\n    Cookies.remove(\"pseudo\");\n    Cookies.remove(\"two_factor\");\n    Cookies.remove(\"id\");\n    Cookies.remove(\"token\");\n    Cookies.remove(\"guildId\");\n    $(\".Menu\").css({\n      \"background-color\": \"black\"\n    });\n    axios.get(\"/api/log?disconnect=true\").then(function () {\n      router.navigate(\"\", {\n        trigger: true\n      });\n    });\n  },\n  tournament: function tournament() {\n    router.navigate(\"connected/tournament\", {\n      trigger: true\n    });\n  }\n});\nvar connectedContent = new ConnectedContent({\n  el: \".Center\"\n});\nvar connectedMenu = new ConnectedMenu({\n  el: \".Menu\"\n});\nexport { connectedMenu, connectedContent };","map":{"version":3,"sources":["/home/mathis/Documents/no_docker/app/javascript/BackboneViews/ConnectedView.js"],"names":["router","User","getUrlParam","getCookie","imageExists","ConnectedContent","Backbone","View","extend","events","render","Cookies","get","document","location","reload","set","$","remove","src","pseudo","user","id","length","fetch","then","res","displayHtml","axios","$el","html","settingsClicked","navigate","trigger","ConnectedMenu","home","play","guild","disconnect","css","tournament","connectedContent","el","connectedMenu"],"mappings":"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","sourcesContent":["import {router} from \"../BackboneRouter/application_router\";\nimport {User} from \"../BackboneModel/user_model\"\nimport {getUrlParam, getCookie, imageExists} from \"../utils/utils_1\"\n\nvar ConnectedContent = Backbone.View.extend({\n    events: {\n        \"click #settingsButton\": \"settingsClicked\",\n    },\n    render : function()\n    {\n        if (Cookies.get(\"need_reload\") == \"true\") {\n            document.location.reload(false);\n            Cookies.set(\"need_reload\", \"false\")\n        }\n\n        $(\"#errorCreate\").remove();\n        var src;\n        var pseudo;\n        var user = new User({id: Cookies.get(\"login\")});\n        \n        pseudo = Cookies.get(\"pseudo\");\n        src = Cookies.get(\"url\");\n        if (src == \"null\" || src.length == 0)\n        {\n            src = \"https://portal.staralliance.com/cms/aux-pictures/prototype-images/avatar-default.png\";\n        }\n        else if (!imageExists(src))\n        {\n            user.fetch().then((res)=>\n            {\n                src = res[\"url\"];\n            });\n        }\n        if (pseudo == \"null\")\n        {\n            user.fetch().then((res)=>\n            {\n                pseudo = res[\"pseudo\"];\n                this.displayHtml(pseudo, src);\n            });\n        }\n        else\n            this.displayHtml(pseudo, src);\n    },\n    displayHtml: function (pseudo, src)\n    {\n        axios.get(`/api/users/${Cookies.get(\"login\")}`).then((res)=>{\n            this.$el.html(`\n            <div id=\"flex_div\">\n                <img src=\"${src}\"> </img>\n                <h1> ${pseudo} </h1>\n                <h2> rank: ${res[\"data\"][\"rank\"]} </h2>\n                <h2> wins: ${res[\"data\"][\"win\"]} </h2>\n                <h2> loss: ${res[\"data\"][\"loss\"]} </h2>\n                <button id=\"settingsButton\"> settings </button>\n            </div>\n            `);\n            return this;\n        });\n\n    },\n    settingsClicked: function()\n    {\n        router.navigate(`connected/settings`, {trigger: true})\n    }})\n    \n    var ConnectedMenu = Backbone.View.extend({\n        events: {\n        \"click #play\": \"play\",\n        \"click #guild\" : \"guild\",\n        \"click #disconnect\" : \"disconnect\",\n        \"click #tournament\" : \"tournament\"\n    },\n    render : function()\n    {\n        this.$el.html(` <div class=\"NavBar\">\n            <h1 id=\"title\"> Ultimate Pong Tournament </h1>\n                <div>\n                    <h1 id=\"play\"> Play </h1>\n                    <h1 id=\"tournament\"> Tournament </h1>\n                    <h1 id=\"guild\"> Guild </h1>\n                    <h1 id=\"disconnect\"> Disconnect </h1>\n                </div>\n            </div>`);\n        return this;\n    },\n    home: function ()\n    {\n        router.navigate(\"connected/play\", {trigger: true})\n    },\n    play: function ()\n    {\n        router.navigate(`connected/play`, {trigger: true})\n    },\n    guild: function ()\n    {\n        router.navigate(\"connected/guild\", {trigger: true})\n    },\n    disconnect: function()\n    {\n        Cookies.remove(\"url\");\n        Cookies.remove(\"login\");\n        Cookies.remove(\"pseudo\");\n        Cookies.remove(\"two_factor\");\n        Cookies.remove(\"id\");\n        Cookies.remove(\"token\");\n        Cookies.remove(\"guildId\");\n        $(\".Menu\").css({\"background-color\": \"black\"});\n        axios.get(`/api/log?disconnect=true`).then(()=>{\n            router.navigate(\"\", {trigger: true})\n        });\n    },\n    tournament: function ()\n    {\n        router.navigate(\"connected/tournament\", {trigger: true})\n    },\n})\n\nvar connectedContent = new ConnectedContent({el: \".Center\"});\nvar connectedMenu = new ConnectedMenu({el: \".Menu\"});\n\nexport {connectedMenu, connectedContent}"]},"metadata":{},"sourceType":"module"}