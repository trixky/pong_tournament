{"ast":null,"code":"import { Chatrooms, Chatroom } from \"../BackboneModel/chat_list_model\";\nimport { UsersChatroom } from \"../BackboneModel/users_chatroom_model\";\nvar NotificationView = Backbone.View.extend({\n  initialize: function initialize(options) {\n    this.bus = options.bus;\n  },\n  events: {\n    \"click .title-notification\": \"onClick\"\n  },\n  onClick: function onClick() {\n    this.bus.trigger(\"notificationSelected\", this);\n  },\n  render: function render() {\n    this.$el.html('<li class=\"notification\"><p class=\"title-notification social-hover\">' + \"notification\" + '</p></li>');\n    return this;\n  }\n});\nvar ChatroomView = Backbone.View.extend({\n  initialize: function initialize(options) {\n    this.bus = options.bus;\n  },\n  events: {\n    \"click .title-chatroom\": \"onClick\"\n  },\n  onClick: function onClick() {\n    this.bus.trigger(\"chatroomSelected\", this.model);\n  },\n  render: function render() {\n    this.$el.html('<li class=\"chatroom\"><p class=\"title-chatroom social-hover\">' + this.model.get(\"name\") + '</p><p class=\"subscribers-grade' + (this.model.get(\"owner\") || this.model.get(\"admin\") == true ? ' social-hover' : '') + '\">' + (this.model.get(\"owner\") == true ? 'â™”' : this.model.get(\"admin\") == true ? 'â™—' : 'â™™') + '</p><p class=\"user-leave social-hover\">âŽ‹</p></li>');\n    return this;\n  }\n});\nvar ChatListViews = Backbone.View.extend({\n  el: \".chat-list\",\n  initialize: function initialize(options) {\n    var self = this;\n    this.chatrooms = new Chatrooms();\n    this.search_is_open = false;\n    this.bus = options.bus;\n    this.adminChatroomPannelView = options.adminChatroomPannelView;\n    this.notifications = options.notifications;\n  },\n  generateSearchList: function generateSearchList() {\n    var self = this;\n    $(\"#search-corps\").html('<ul id=\"chat-search-list\">\\\n        </ul>');\n    this.chatrooms.fetch({\n      data: {\n        search_entry: $(\"#input-button-search-chatroom\").val()\n      }\n    }).then(function () {\n      $(\"#chat-search-list\").html(\"\");\n      self.chatrooms.each(function (chatroom) {\n        $(\"#chat-search-list\").append('<li class=\"chatroom\"><p class=\"title-chatroom-search\">' + chatroom.get(\"name\") + (chatroom.get(\"private\") ? ' ðŸ”’' : '') + '</p><p class=\"user-enter social-hover\" data-private=\"' + (chatroom.get(\"private\") ? true : false) + '\" data-open=\"false\">âŽ†</p></li><input type=\"text\" class=\"pass chatroom-text-input\" placeholder=\"password...\" style=\"display:none;\"></input>');\n      });\n      $(\".user-enter\").click(function (e) {\n        var green_button = this;\n\n        if (green_button.getAttribute(\"data-private\") == 'true') {\n          var password_input = $(e.currentTarget).parent().next();\n\n          if ($(e.currentTarget).parent().next().attr(\"style\") == \"display:none;\") {\n            password_input.attr(\"style\", \"display:block;\");\n            password_input.focus();\n          } else {\n            var userChatroom = new UsersChatroom();\n            var chatroom_name = $(e.currentTarget).parent().children(\".title-chatroom-search\").html();\n            userChatroom.set({\n              chatroom: chatroom_name.substring(0, chatroom_name.length - 3),\n              password: password_input.val()\n            });\n            userChatroom.save({}, {\n              success: function success(model, response) {\n                if (response.created != \"success\") alert(\"imposssible de rejoindre le channel: \" + response.created);\n              }\n            }).then(function () {\n              // userChatroom.destroy()\n              self.render();\n            });\n          }\n        } else {\n          var userChatroom = new UsersChatroom();\n          userChatroom.set({\n            chatroom: $(e.currentTarget).parent().children(\".title-chatroom-search\").html()\n          });\n          userChatroom.save({}, {\n            success: function success(model, response) {\n              if (response.created != \"success\") alert(\"imposssible de rejoindre le channel: \" + response.created);\n            }\n          }).then(function () {\n            // userChatroom.destroy()\n            self.render();\n          });\n        }\n      });\n    });\n  },\n  events: {\n    \"click #right-button-sub\": \"onClickForSearch\",\n    \"click .user-leave\": \"onClickForLeave\"\n  },\n  onClickForSearch: function onClickForSearch() {\n    var self = this;\n\n    if (this.search_is_open == false) {\n      $(\"#chat-list\").prepend('<div id=\"search-sub\">\\\n                    <input type=\"text\" id=\"input-button-search-chatroom\"></input><p class=\"private-chatroom-button social-hover\">ðŸ¤«</p><p class=\"create-chatroom-button social-hover\">C</p>\\\n                    <div id=\"search-corps\">\\\n                    </div>\\\n                </div>');\n      $(\"#input-button-search-chatroom\").keyup(function (e) {\n        self.generateSearchList();\n      });\n      self.generateSearchList();\n      $(\".private-chatroom-button\").click(function (e) {\n        $(\"#search-corps\").html('<div id=\"div-private-chatroom-search-topbar\"><p class=\"private-chatroom-search-topbar\">join private chatroom</p><p class=\"user-enter-private social-hover\">âŽ†</p></div>\\\n                    <input class=\"chatroom-text-input private-input\" id=\"private-chatroom-name-input\" placeholder=\"chatroom name\" type=\"texte\"></input>\\\n                    <input class=\"pass chatroom-text-input private-input\" id=\"private-chatroom-password-input\" placeholder=\"password\" type=\"text\"></input>');\n        $(\".user-enter-private\").click(function (e) {\n          var userChatroom = new UsersChatroom();\n          userChatroom.set({\n            chatroom: $(\"#private-chatroom-name-input\").val(),\n            password: $(\"#private-chatroom-password-input\").val()\n          });\n          userChatroom.save({}, {\n            success: function success(model, response) {\n              if (response.created != \"success\") alert(\"imposssible de rejoindre le channel: \" + response.created);\n            }\n          }).then(function () {\n            // userChatroom.destroy()\n            self.render();\n          });\n        });\n      });\n      $(\".create-chatroom-button\").click(function (e) {\n        $(\"#search-corps\").html('<div id=\"div-create-chatroom-search-topbar\"><p class=\"create-chatroom-search-topbar\">create your chatroom</p><p class=\"user-enter-create social-hover\">âŽ†</p></div>\\\n                    <input class=\"chatroom-text-input create-input\" id=\"private-chatroom-name-input\" placeholder=\"chatroom name\" type=\"texte\"></input>\\\n                    <input class=\"chatroom-text-input create-input\" id=\"private-chatroom-password-input\" placeholder=\"password\" type=\"text\" disabled></input>\\\n                    <input class=\"pass chatroom-check-input create-input\" id=\"chatroom-check-password-input\" type=\"checkbox\"></input><p class=\"chatroom-tag-create-input\">password</p>\\\n                    <input class=\"chatroom-check-input create-input\" id=\"chatroom-check-private-input\" type=\"checkbox\"></input><p class=\"chatroom-tag-create-input\">private</p>');\n        $(\".user-enter-create\").click(function (e) {\n          /* create */\n          var chatroom = new Chatroom();\n          chatroom.set({\n            chatroom: $(\"#private-chatroom-name-input\").val(),\n            \"protected\": $(\"#chatroom-check-password-input\").is(\":checked\"),\n            password: $(\"#private-chatroom-password-input\").val(),\n            \"private\": !$(\"#chatroom-check-private-input\").is(\":checked\")\n          });\n          chatroom.save({}, {\n            success: function success(model, response) {\n              if (response.created != \"success\") alert(\"imposssible de rejoindre le channel: \" + response.created);\n            }\n          }).then(function () {\n            // chatroom.destroy()\n            self.render();\n          });\n        });\n        $(\"#chatroom-check-password-input\").click(function (e) {\n          /* password check */\n          if ($(\"#chatroom-check-password-input\").is(\":checked\")) {\n            $(\"#private-chatroom-password-input\").prop(\"disabled\", false);\n          } else {\n            $(\"#private-chatroom-password-input\").prop(\"disabled\", true);\n            $(\"#private-chatroom-password-input\").val('');\n          }\n        });\n        $(\"#chatroom-check-private-input\").click(function (e) {\n          /* private check */\n          if ($(\"#chatroom-check-private-input\").is(\":checked\")) {\n            $(\"#private-chatroom-password-input\").prop(\"disabled\", false);\n            $(\"#chatroom-check-password-input\").prop(\"checked\", true);\n            $(\"#chatroom-check-password-input\").prop(\"disabled\", true);\n          } else {\n            $(\"#chatroom-check-password-input\").prop(\"checked\", false);\n            $(\"#chatroom-check-password-input\").prop(\"disabled\", false);\n            $(\"#private-chatroom-password-input\").prop(\"disabled\", true);\n            $(\"#private-chatroom-password-input\").val('');\n          }\n        });\n      });\n      $(\"#right-button-sub\").html(\"âˆ’\");\n      $(\"#right-button-sub\").css(\"background\", \"red\");\n      this.search_is_open = true;\n    } else {\n      $(\"#right-button-sub\").html(\"âœš\");\n      $(\"#right-button-sub\").css(\"background\", \"green\");\n      $(\"#search-sub\").remove();\n      this.search_is_open = false;\n    }\n  },\n  onClickForLeave: function onClickForLeave(e) {\n    var self = this;\n\n    if ($(e.currentTarget).prev().html() == 'â™”') {\n      alert(\"attention, en tant que owner de la chatroom, pour quitter celle-ci, vous devez la detruire via le chat-pannel-controller\");\n    } else {\n      var userChatroom = new UsersChatroom({\n        id: $(e.currentTarget).parent().children(\".title-chatroom\").html()\n      });\n      userChatroom.destroy().then(function () {\n        self.render();\n      });\n    }\n  },\n  render: function render() {\n    var self = this;\n    self.panelChatroomAdminIsOpen = false;\n    this.search_is_open = false;\n    this.$el.html('<div id=\"chat-list\">\\\n            <div id=\"chat-list-top-bar\">\\\n                <p id=\"center\">YourSubs</p><p id=\"right-button-sub\" class=\"social-hover\">âœš</p>\\\n            </div>\\\n            <ul id=\"chat-list-container\">\\\n            </ul>\\\n            </div>');\n    $(\"#right-button-sub\").css(\"background\", \"green\");\n    var notificationView = new NotificationView({\n      bus: self.bus\n    });\n    self.$el.find(\"ul#chat-list-container\").append(notificationView.render().$el);\n    self.notifications.fetch().then(function () {\n      if (self.notifications.length > 0) {\n        $(\".title-notification\").addClass(\"notification-blink\");\n      }\n    });\n    self.model.fetch().then(function () {\n      self.model.each(function (chatroom) {\n        var chatroomView = new ChatroomView({\n          model: chatroom,\n          bus: self.bus\n        });\n        self.$el.find(\"ul#chat-list-container\").append(chatroomView.render().$el);\n      });\n      self.generateSearchList();\n      $(\".subscribers-grade.social-hover\").click(function (e) {\n        self.adminChatroomPannelView.render(self, e);\n      });\n      return self;\n    });\n  }\n});\nexport { ChatListViews };","map":{"version":3,"sources":["/home/mathis/Documents/no_docker/app/javascript/BackboneViews/ChatListView.js"],"names":["Chatrooms","Chatroom","UsersChatroom","NotificationView","Backbone","View","extend","initialize","options","bus","events","onClick","trigger","render","$el","html","ChatroomView","model","get","ChatListViews","el","self","chatrooms","search_is_open","adminChatroomPannelView","notifications","generateSearchList","$","fetch","data","search_entry","val","then","each","chatroom","append","click","e","green_button","getAttribute","password_input","currentTarget","parent","next","attr","focus","userChatroom","chatroom_name","children","set","substring","length","password","save","success","response","created","alert","onClickForSearch","prepend","keyup","is","prop","css","remove","onClickForLeave","prev","id","destroy","panelChatroomAdminIsOpen","notificationView","find","addClass","chatroomView"],"mappings":"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","sourcesContent":["import { Chatrooms, Chatroom } from \"../BackboneModel/chat_list_model\"\nimport { UsersChatroom } from \"../BackboneModel/users_chatroom_model\"\n\nvar NotificationView = Backbone.View.extend({\n\n    initialize: function (options) {\n        this.bus = options.bus;\n    },\n\n    events: {\n        \"click .title-notification\": \"onClick\"\n    },\n\n    onClick: function () {\n        this.bus.trigger(\"notificationSelected\", this)\n    },\n\n    render: function () {\n        this.$el.html('<li class=\"notification\"><p class=\"title-notification social-hover\">' + \"notification\" + '</p></li>')\n        return this;\n    }\n})\n\nvar ChatroomView = Backbone.View.extend({\n\n    initialize: function (options) {\n        this.bus = options.bus;\n    },\n\n    events: {\n        \"click .title-chatroom\": \"onClick\"\n    },\n\n    onClick: function () {\n        this.bus.trigger(\"chatroomSelected\", this.model)\n    },\n\n    render: function () {\n        this.$el.html('<li class=\"chatroom\"><p class=\"title-chatroom social-hover\">' + this.model.get(\"name\") + '</p><p class=\"subscribers-grade' + (this.model.get(\"owner\") || this.model.get(\"admin\") == true ? ' social-hover' : '') + '\">' + (this.model.get(\"owner\") == true ? 'â™”' : (this.model.get(\"admin\") == true ? 'â™—' : 'â™™')) + '</p><p class=\"user-leave social-hover\">âŽ‹</p></li>')\n        return this;\n    }\n});\n\n\nvar ChatListViews = Backbone.View.extend({\n    el: \".chat-list\",\n\n    initialize: function (options) {\n        var self = this;\n        this.chatrooms = new Chatrooms();\n        this.search_is_open = false;\n        this.bus = options.bus;\n        this.adminChatroomPannelView = options.adminChatroomPannelView;\n        this.notifications = options.notifications;\n    },\n\n    generateSearchList: function () {\n        var self = this;\n        $(\"#search-corps\").html('<ul id=\"chat-search-list\">\\\n        </ul>');\n        this.chatrooms.fetch({ data: { search_entry: $(\"#input-button-search-chatroom\").val() } }).then(function () {\n            $(\"#chat-search-list\").html(\"\");\n            self.chatrooms.each(function (chatroom) {\n                $(\"#chat-search-list\").append('<li class=\"chatroom\"><p class=\"title-chatroom-search\">' + chatroom.get(\"name\") + (chatroom.get(\"private\") ? ' ðŸ”’' : '') + '</p><p class=\"user-enter social-hover\" data-private=\"' + (chatroom.get(\"private\") ? true : false) + '\" data-open=\"false\">âŽ†</p></li><input type=\"text\" class=\"pass chatroom-text-input\" placeholder=\"password...\" style=\"display:none;\"></input>')\n            })\n            $(\".user-enter\").click(function (e) {\n                var green_button = this;\n                if (green_button.getAttribute(\"data-private\") == 'true') {\n                    var password_input = $(e.currentTarget).parent().next()\n                    if ($(e.currentTarget).parent().next().attr(\"style\") == \"display:none;\") {\n                        password_input.attr(\"style\", \"display:block;\")\n                        password_input.focus()\n                    }\n                    else {\n                        var userChatroom = new UsersChatroom();\n                        var chatroom_name = $(e.currentTarget).parent().children(\".title-chatroom-search\").html();\n                        userChatroom.set({\n                            chatroom: chatroom_name.substring(0, chatroom_name.length - 3),\n                            password: password_input.val()\n                        })\n                        userChatroom.save({}, {\n                            success: function (model, response) {\n                                if (response.created != \"success\")\n                                    alert(\"imposssible de rejoindre le channel: \" + response.created)\n                            }\n                        }).then(function () {\n                            // userChatroom.destroy()\n                            self.render();\n                        })\n                    }\n                }\n                else {\n                    var userChatroom = new UsersChatroom();\n                    userChatroom.set({ chatroom: $(e.currentTarget).parent().children(\".title-chatroom-search\").html() })\n                    userChatroom.save({}, {\n                        success: function (model, response) {\n                            if (response.created != \"success\")\n                                alert(\"imposssible de rejoindre le channel: \" + response.created)\n                        }\n                    }).then(function () {\n                        // userChatroom.destroy()\n                        self.render();\n                    })\n                }\n            })\n        });\n    },\n\n    events: {\n        \"click #right-button-sub\": \"onClickForSearch\",\n        \"click .user-leave\": \"onClickForLeave\"\n    },\n\n    onClickForSearch: function () {\n        var self = this;\n        if (this.search_is_open == false) {\n            $(\"#chat-list\").prepend('<div id=\"search-sub\">\\\n                    <input type=\"text\" id=\"input-button-search-chatroom\"></input><p class=\"private-chatroom-button social-hover\">ðŸ¤«</p><p class=\"create-chatroom-button social-hover\">C</p>\\\n                    <div id=\"search-corps\">\\\n                    </div>\\\n                </div>')\n            $(\"#input-button-search-chatroom\").keyup(function (e) {\n                self.generateSearchList();\n            })\n            self.generateSearchList();\n            $(\".private-chatroom-button\").click(function (e) {\n                $(\"#search-corps\").html('<div id=\"div-private-chatroom-search-topbar\"><p class=\"private-chatroom-search-topbar\">join private chatroom</p><p class=\"user-enter-private social-hover\">âŽ†</p></div>\\\n                    <input class=\"chatroom-text-input private-input\" id=\"private-chatroom-name-input\" placeholder=\"chatroom name\" type=\"texte\"></input>\\\n                    <input class=\"pass chatroom-text-input private-input\" id=\"private-chatroom-password-input\" placeholder=\"password\" type=\"text\"></input>');\n                $(\".user-enter-private\").click(function (e) {\n                    var userChatroom = new UsersChatroom();\n                    userChatroom.set({\n                        chatroom: $(\"#private-chatroom-name-input\").val(),\n                        password: $(\"#private-chatroom-password-input\").val()\n                    })\n                    userChatroom.save({}, {\n                        success: function (model, response) {\n                            if (response.created != \"success\")\n                                alert(\"imposssible de rejoindre le channel: \" + response.created)\n                        }\n                    }).then(function () {\n                        // userChatroom.destroy()\n                        self.render();\n                    })\n                })\n            })\n            $(\".create-chatroom-button\").click(function (e) {\n                $(\"#search-corps\").html('<div id=\"div-create-chatroom-search-topbar\"><p class=\"create-chatroom-search-topbar\">create your chatroom</p><p class=\"user-enter-create social-hover\">âŽ†</p></div>\\\n                    <input class=\"chatroom-text-input create-input\" id=\"private-chatroom-name-input\" placeholder=\"chatroom name\" type=\"texte\"></input>\\\n                    <input class=\"chatroom-text-input create-input\" id=\"private-chatroom-password-input\" placeholder=\"password\" type=\"text\" disabled></input>\\\n                    <input class=\"pass chatroom-check-input create-input\" id=\"chatroom-check-password-input\" type=\"checkbox\"></input><p class=\"chatroom-tag-create-input\">password</p>\\\n                    <input class=\"chatroom-check-input create-input\" id=\"chatroom-check-private-input\" type=\"checkbox\"></input><p class=\"chatroom-tag-create-input\">private</p>');\n                $(\".user-enter-create\").click(function (e) {    /* create */\n                    var chatroom = new Chatroom();\n                    chatroom.set({\n                        chatroom: $(\"#private-chatroom-name-input\").val(),\n                        protected: $(\"#chatroom-check-password-input\").is(\":checked\"),\n                        password: $(\"#private-chatroom-password-input\").val(),\n                        private: !($(\"#chatroom-check-private-input\").is(\":checked\"))\n                    });\n                    chatroom.save({}, {\n                        success: function (model, response) {\n                            if (response.created != \"success\")\n                                alert(\"imposssible de rejoindre le channel: \" + response.created)\n                        }\n                    }).then(function () {\n                        // chatroom.destroy()\n                        self.render();\n                    })\n                })\n                $(\"#chatroom-check-password-input\").click(function (e) {    /* password check */\n                    if ($(\"#chatroom-check-password-input\").is(\":checked\")) {\n                        $(\"#private-chatroom-password-input\").prop(\"disabled\", false);\n                    }\n                    else {\n                        $(\"#private-chatroom-password-input\").prop(\"disabled\", true);\n                        $(\"#private-chatroom-password-input\").val('');\n                    }\n                })\n                $(\"#chatroom-check-private-input\").click(function (e) {    /* private check */\n                    if ($(\"#chatroom-check-private-input\").is(\":checked\")) {\n                        $(\"#private-chatroom-password-input\").prop(\"disabled\", false);\n                        $(\"#chatroom-check-password-input\").prop(\"checked\", true);\n                        $(\"#chatroom-check-password-input\").prop(\"disabled\", true);\n                    }\n                    else {\n                        $(\"#chatroom-check-password-input\").prop(\"checked\", false);\n                        $(\"#chatroom-check-password-input\").prop(\"disabled\", false);\n                        $(\"#private-chatroom-password-input\").prop(\"disabled\", true);\n                        $(\"#private-chatroom-password-input\").val('');\n                    }\n                })\n            })\n            $(\"#right-button-sub\").html(\"âˆ’\")\n            $(\"#right-button-sub\").css(\"background\", \"red\")\n            this.search_is_open = true;\n        }\n        else {\n            $(\"#right-button-sub\").html(\"âœš\")\n            $(\"#right-button-sub\").css(\"background\", \"green\")\n            $(\"#search-sub\").remove()\n            this.search_is_open = false;\n        }\n    },\n\n    onClickForLeave: function (e) {\n        var self = this;\n\n        if ($(e.currentTarget).prev().html() == 'â™”') {\n            alert(\"attention, en tant que owner de la chatroom, pour quitter celle-ci, vous devez la detruire via le chat-pannel-controller\")\n        }\n        else {\n            var userChatroom = new UsersChatroom({id: $(e.currentTarget).parent().children(\".title-chatroom\").html()});\n            userChatroom.destroy().then(function () {\n                self.render();\n            })\n        }\n    },\n\n    render: function () {\n        var self = this;\n        self.panelChatroomAdminIsOpen = false;\n        this.search_is_open = false\n        this.$el.html('<div id=\"chat-list\">\\\n            <div id=\"chat-list-top-bar\">\\\n                <p id=\"center\">YourSubs</p><p id=\"right-button-sub\" class=\"social-hover\">âœš</p>\\\n            </div>\\\n            <ul id=\"chat-list-container\">\\\n            </ul>\\\n            </div>');\n        $(\"#right-button-sub\").css(\"background\", \"green\")\n        var notificationView = new NotificationView({ bus: self.bus })\n        self.$el.find(\"ul#chat-list-container\").append(notificationView.render().$el);\n        self.notifications.fetch().then(function () {\n            if (self.notifications.length > 0) {\n                $(\".title-notification\").addClass(\"notification-blink\")\n            }\n        })\n        self.model.fetch().then(function () {\n            self.model.each(function (chatroom) {\n                var chatroomView = new ChatroomView({ model: chatroom, bus: self.bus })\n                self.$el.find(\"ul#chat-list-container\").append(chatroomView.render().$el);\n            })\n\n            self.generateSearchList();\n            $(\".subscribers-grade.social-hover\").click(function (e) {\n                self.adminChatroomPannelView.render(self, e);\n            });\n\n            return self;\n        })\n    }\n});\n\nexport { ChatListViews }\n"]},"metadata":{},"sourceType":"module"}